//-----------------------------------------------------------------------------
// Entaro ChucK Developer!
// This is a Chugin boilerplate, generated by chuginate!
//-----------------------------------------------------------------------------

// include pch
#include "chugl_pch.h"

#include "ulib_cgl.h"
#include "window.h"


// references to VM and API
static Chuck_VM * g_chuglVM = NULL;
static CK_DL_API g_chuglAPI = NULL;

t_CKBOOL chugl_main_loop_hook(void* bindle)
{
    // std::cerr << "INSIDE chugl main loop hook!" << std::endl;
    Window window;

    window.DisplayLoop();

    // std::cerr << "==exiting chugl window==" << std::endl;
    CGL::DeactivateHook();

    // remove all shreds (should trigger shutdown, unless running in --loop mode)
    if( g_chuglVM && g_chuglAPI )
        g_chuglAPI->vm->remove_all_shreds( g_chuglVM );

    return TRUE;
}

t_CKBOOL chugl_main_loop_quit(void* bindle)
{
    // std::cerr << "LEAVING chugl main loop hook" << std::endl;
    // window.Terminate();
    return true;
}

CK_DLL_QUERY(ChuGL)
{
    // hmm, don't change this...
    QUERY->setname(QUERY, "ChuGL");
    CGL::hook = QUERY->create_main_thread_hook(QUERY, chugl_main_loop_hook, chugl_main_loop_quit, NULL);
    init_chugl(QUERY);

    // remember
    g_chuglVM = QUERY->vm();
    g_chuglAPI = QUERY->api();

    // wasn't that a breeze?
    return TRUE;
}
